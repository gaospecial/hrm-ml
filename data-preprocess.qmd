# Data preprocess


## Files

The plate setting used in melting curve analysis is provided in a `csv` file. Original value for each column is the times of two-fold dilution, and we transform them into DNA quantity as related to the original concentration (assumed to be 1). 

*Note*: a label value of `16` means not contain this species.

```{r}
library(dplyr)

# experimental results
files = list.files("data-raw/modeling-qPCR", pattern = ".txt", full.names = TRUE)

# plate setting - layout
plate = read.csv(xfun::magic_path("modeling-plate-labels.csv")) |> 
  mutate(label_E = ifelse(label_E == 0, 1, ifelse(label_E == 16, 0, 1/2^label_E)),
         label_P = ifelse(label_P == 0, 1, ifelse(label_P == 16, 0, 1/2^label_P)))
```

## Data Process By `mcmodel`

Extract cycle and repeat from file names.

```{r}
library(stringr)
get_cycle = function(filename){
  str_extract(filename, "cycle[0-9]{2}")  |> 
    str_remove("cycle")  |> 
    as.numeric()
}

get_repeat = function(filename){
  str_extract(filename, "experiment[0-9]")  |> 
    str_remove("experiment")  |> 
    as.numeric()
}
```

Read in melting curve and extract data from temperature 80 to 90 Â°C, transform raw signal to step 0.1 signal by interpolations.

```{r}
library(mcmodel)

mc0512 = lapply(seq_along(files), function(i){
  filename = files[[i]]
  all = read_quantstudio(filename)
  sample = plate  |> 
    mutate(cycle = get_cycle(filename), rep = get_repeat(filename))
  mc = quantstudio2mc(all, primer = "V4", plate = sample)  |> 
    filterData(from = 80, to = 90)  |> 
    transformData(step = 0.1)
  return(mc)
})
```

Transform `MeltingCurve` object to data frame.

```{r}
data0512 = lapply(mc0512, mc_tbl2wider) |> bind_rows()

head(data0512)
```

## Save Modeling Data

Save data frame to disk.

```{r}
write.csv(data0512, file = "data-clean/20230512.csv", row.names = FALSE)
```
